#!/usr/bin/env ruby

require 'optparse'
require_relative 'lib/rss'

FEEDS = {   google_news:   'https://news.google.com/?output=rss',
            google_news_tw:'http://news.google.com.tw/news?pz=1&cf=all&ned=tw&hl=zh-TW&output=rss',
            nytimes:       'http://rss.nytimes.com/services/xml/rss/nyt/HomePage.xml',
        }
DEFAULT_FEEDS = [FEEDS[:nytimes], FEEDS[:google_news_tw]]
CONFIG_FILE = "#{ENV['HOME']}/.config/news.conf"

params = {}
opt_parser = OptionParser.new do |opt|
    opt.banner = "Usage:"
    opt.separator "     dealnews -s <rss selection> -t <minutes> -t"
    opt.separator  "Parameters"

    opt.on("-s","--selection <rss>","most_recent, editor_choice or default: most_popular") do |value|
        params[:rss] = value
    end
    opt.on("-u","--url <show>", "display url") do |value|
        params[:url] = value
    end


    opt.on("-t","--time <minute>",Integer, "display feed for the last n minutes") do |value|
        params[:time] = value
    end

    opt.on("-h","--help","help") do
        puts opt_parser
        exit 1
    end
end
opt_parser.parse!
puts "parmas: #{params}"
if(params.has_key?(:rss) && feeds.has_key?(params[:rss].to_sym))
    params[:rss] = [feeds[params[:rss].to_sym]]
else
    params[:rss] = DEFAULT_FEEDS
end

rss = Rss.new(FEEDS, params, CONFIG_FILE)
rss.read
