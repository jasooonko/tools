#!/usr/bin/env ruby

require 'rss'
require 'date'
require 'time'
require 'colorize'
require 'optparse'

feeds = {   most_recent:    'http://s31.dlnws.com/dealnews/rss/todays-edition.xml',
            most_popular:   'http://s31.dlnws.com/dealnews/rss/popular.xml',
            editor_choice:  'http://s31.dlnws.com/dealnews/rss/editors-choice.xml',
            techbargains:   'http://www.techbargains.com/rss.xml',
            slickdeals:     'http://feeds.feedburner.com/SlickdealsnetForums-9?format=xml',
            fatwallet:      'http://feeds.feedburner.com/FatwalletHotDeals?format=xml',
        }
config_file = '.config/dealnews.conf'

params = {}
opt_parser = OptionParser.new do |opt|
    opt.banner = "Usage:"
    opt.separator "     dealnews -s <rss selection> -t <minutes> -t"
    opt.separator  "Parameters"

    opt.on("-s","--selection <rss>","most_recent, editor_choice or default: most_popular") do |value|
        params[:rss] = value
    end

    opt.on("-t","--time <minute>",Integer, "display feed for the last n minutes") do |value|
        params[:time] = value
    end

    opt.on("-h","--help","help") do
        puts opt_parser
        exit 1
    end
end
opt_parser.parse!
if(params.has_key?(:rss) && feeds.has_key?(params[:rss].to_sym))
    params[:rss] = [feeds[params[:rss].to_sym]]
else
    params[:rss] = [feeds[:most_popular], feeds[:techbargains], feeds[:fatwallet]]
end
begin
    last_read = DateTime.strptime(File.read(config_file),'%FT%T%:z')
rescue
    last_read = DateTime.now - 1 # Yesterday
end
puts 'last read: ' + last_read.to_s.blue
puts params
range = last_read
if(params.key?(:time))
    range = DateTime.now - ((1.0/24/60)*params[:time])
end

File.open(config_file, 'w') {|f| f.write(DateTime.now)}
params[:rss].each do |rss_url|
    rss = RSS::Parser.parse(rss_url, false)
    puts "\n<-- #{rss_url} -->"
    rss.items[0..50].each do |item|
        date = item.pubDate.to_datetime
        if(date > range)
            if(date > last_read)
                puts "#{date.strftime("%m/%d %I:%M%p")} - " + item.title.yellow
                puts ' - ' + item.link
            else
                puts "#{date.strftime("%m/%d %I:%M%p")} - " + item.title
            end
        end
    end
end
